= simple_form_for [:admin, @project] do |f|
  = f.error_notification
  .form-inputs
    = f.input :shortlink, label: t('activerecord.project.shortlink'), label_html: { class: 'label' }
    = f.input :title, label: t('activerecord.project.title'), label_html: { class: 'label' }
    = f.input :description, label: t('activerecord.project.description'), label_html: { class: 'label' }
    = f.input :keywords, label: t('activerecord.project.keywords'), label_html: { class: 'label' }
    = f.input :content, label: t('activerecord.project.content'), label_html: { class: 'label' }
    = f.input :livelink, label: t('activerecord.project.livelink'), label_html: { class: 'label' }
    = f.input :publish, label: t('activerecord.project.publish'), label_html: { class: 'label' }
    h3 = t(:screenshots)

    table.project-form
      thead
        tr
          td = t('web_app_theme.input') 
          td = t('web_app_theme.preview')
          td = t('web_app_theme.delete')
      tbody
        = f.fields_for :screenshots do |s|
          = render 'screenshot_fields', f: s
    .links= link_to_add_association t('add_screenshot'), f, :screenshots

    h3 = t(:technologies)
    #technologies
    //= f.input_field :technology_ids, data: { placeholder: "Choose techs", saved: @search.technologies.to_json, url: autocomplete_technology_title_searches_path }, input_html:  { class: "select2" }
  
  .form-actions
    = f.submit t('web_app_theme.save'), class: 'button success'
    = ' ' + t('web_app_theme.or') + ' '
    = link_to t('web_app_theme.cancel'), admin_projects_path